{"version":3,"sources":["components/Nav/index.js","components/Footer/index.js","components/Start/index.js","components/End/index.js","utils/API.js","components/walkWaitBtn.js","pages/Main/index.js","utils/AdminAPI.js","pages/Admin/index.js","pages/About/index.js","pages/404/index.js","pages/Signin/index.js","pages/Signup/index.js","App.js","serviceWorker.js","index.js"],"names":["FixedNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleActive","e","forceUpdate","state","collapse","onClick","bind","assertThisInitialized","setState","react_default","a","createElement","mdbreact_esm","style","backgroundColor","dark","expand","scrolling","fixed","href","isOpen","navbar","left","className","window","location","pathname","to","React","Component","FooterPage","color","fluid","Date","getFullYear","Departure","type","geolocate","far","icon","id","onChange","handleChange","defaultValue","departOptions","map","option","index","key","concat","route","value","data-route","data-direction","direction","title","Arrival","arrivalOptions","API","getAllBuses","lat","lon","axios","get","getNextStops","stopId","search","originStopId","destinationStopId","terminal","previous","Result","_this$props","travelMode","walkTime","nextBus","console","log","heading","text","Main","preventDefault","navigator","geolocation","getCurrentPosition","geoSucess","geoError","enableHighAccuracy","alert","position","latitude","coords","longitude","_this$state","getBusAtLocation","err","code","message","then","res","buses","data","forEach","bus","thisBus","stop","values","split","charAt","slice","join","push","handleDepartInput","_ref","asyncToGenerator","regenerator_default","mark","_callee","selectedBus","depart","wrap","_context","prev","next","target","selectedIndex","childNodes","getAttribute","listDestinations","_x","apply","arguments","_this$state$depart","handleDestinationInput","length","previousStop","arrival","handleSubmit","parseInt","origin","destination","receivedResult","walk","catch","error","handleClickForDisplay","_this2","md","sm","walkWaitBtn","result","maxWidth","Start","End","size","AdminAPI","addAllRoutes","Admin","populateRoute","name","event","defineProperty","registerUser","password","email","response","showError","loginError","registerError","post","sent","messageFromServer","t0","logout","localStorage","removeItem","isLoading","loggedIn","showNullError","accessString","getItem","headers","Authorization","auth","_this3","admin","borderTop","label","group","validate","success","AboutPage","Err","Signin","loginUser","setItem","token","react_router","Signup","App","react_router_dom","Nav","exact","path","component","Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbeeb169.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBCollapse, MDBNavItem, MDBDropdownItem, MDBNavLink, MDBIcon } from 'mdbreact';\n\nclass FixedNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  toggleActive = (e) => {\n    this.forceUpdate()\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <MDBNavbar style={{ backgroundColor: \"#212121\" }} dark expand=\"md\" scrolling fixed=\"top\">\n            <MDBNavbarBrand href=\"/\" onClick={this.toggleActive}>\n              <strong>Walk/Wait</strong>\n            </MDBNavbarBrand>\n            <MDBNavbarToggler onClick={this.onClick} />\n            <MDBCollapse isOpen={this.state.collapse} navbar>\n              <MDBNavbarNav left>\n                <MDBNavItem className={window.location.pathname === \"/about\" && \"active\"} onClick={this.toggleActive}>\n                  <MDBNavLink to=\"/about\" >About</MDBNavLink>\n                </MDBNavItem>\n              </MDBNavbarNav>\n            </MDBCollapse>\n          </MDBNavbar>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default FixedNavbar;","import React from \"react\";\nimport { MDBContainer,  MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"elegant-color-dark\" className=\"font-small mt-4\">\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: Sharon Chien, Paul Xu, Quang Chieu Nguyen and Holland Gronau<br></br> \n          <a href=\"/signin\">Powered by:</a><span> Google Maps Distance Matrix API &amp; NextBus</span>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;","import React, { Component } from \"react\";\nimport { MDBIcon } from \"mdbreact\";\nimport './style.css'\n\nclass Departure extends Component {\n  \n  render() {\n    return (\n    <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n            <button style={{color: \"#ffea00\"}} className=\"btn search\" type=\"button\" onClick={(e) => this.props.geolocate(e)}><MDBIcon  far icon=\"dot-circle\" /></button>\n        </div>\n        <select className=\"custom-select\" id=\"\" onChange={(e) => this.props.handleChange(e)}>\n            <option defaultValue>Start...</option>\n            {this.props.departOptions.map((option, index) =>\n              <option key={`${index}_${option.route}_${option.id}`} value={option.id} data-route={option.route} data-direction={option.direction}>{option.title}</option>\n            )}\n        </select>\n    </div>\n    );\n  }\n}\n\nexport default Departure;","import React, { Component } from \"react\";\n\nclass Arrival extends Component {\n  render() {\n    return (\n    <div className=\"input-group mb-3\">\n        <select className=\"custom-select\" id=\"\" onChange={(e) => this.props.handleChange(e)}>\n            <option defaultValue>Arrive...</option>\n            {this.props.arrivalOptions.map((option, index) =>\n              <option key={`${index}_${this.props.route}_${option.id}`} value={option.id}>{option.title}</option>\n            )}\n        </select>\n    </div>\n    );\n  }\n}\n\nexport default Arrival;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all bus near geolocation\n  getAllBuses: (lat, lon) => {\n    return axios.get(`/api/bus/latlon/${lat}/${lon}`);\n  },\n  getNextStops: (route, direction, stopId) =>{\n    return axios.get(`/api/bus/nextstops/${route}/${direction}/${stopId}`)\n  },\n  search: (route, originStopId, destinationStopId, terminal, previous) => {\n    return axios.get(`/api/app/search/${route}/${originStopId}/${destinationStopId}/${terminal}/${previous}`)\n  },\n};","import React from 'react'\n\nclass Result extends React.Component {\n\n  render() {\n\n    let {travelMode, walkTime, nextBus} = this.props\n\n    console.log('travelMode', travelMode)\n    let heading = \"\"\n    let text = \"\"\n\n    if (travelMode === 'walk') {\n        heading = 'walk'\n        text= 'Based on our math, your feet are the best option.'\n    }else if (travelMode === 'cab') {\n        heading= 'cab'\n        text= `For various reasons, including that a bus may not be coming at all, you should call a cab. If you want to walk, it will take you ${walkTime} minutes.` \n    }else if (travelMode === 'wait') {\n        heading= 'wait'\n        text= `Our math shows the TTC will get you there faster. Next bus is arriving in ${nextBus} minute(s).` \n    }\n\n      console.log (heading)\n      console.log (text)\n\n    return(\n       <div><button className={heading} onClick={(e)=>{this.props.onClick(e)}}><h2>{heading}</h2><br></br><p>{text}</p></button></div>\n    );\n  }\n}\n\nexport default Result; \n\n","import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, } from 'mdbreact';\nimport Start from '../../components/Start'\nimport End from '../../components/End'\nimport API from '../../utils/API'\nimport WalkButtonWaitButton from '../../components/walkWaitBtn'\nimport '../pageStyle.css'\n\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      latitude: \"\",\n      longitude: \"\",\n      departOptions: [],\n      arrivalOptions: [],\n      depart: {},\n      arrival: {},\n      receivedResult: false,\n      travelMode: null,\n      error: null,\n      nextBus: null,\n      walkTime: null,\n    };\n  }\n\n  geolocate = (e) => {\n    e.preventDefault()\n    let geoOptions = {\n       enableHighAccuracy: true\n    };\n\n    if (\"geolocation\" in navigator){\n      navigator.geolocation.getCurrentPosition(this.geoSucess, this.geoError, geoOptions)\n    }else {\n      alert(\"Geolocation needs to be turned on for this application.\")\n    }\n  }\n\n  geoSucess = (position) => {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    })\n    let {latitude, longitude} = this.state\n    this.getBusAtLocation(latitude, longitude)\n  }\n\n  geoError = (err) => {\n    console.log(`GEOLOCATE ERROR(${err.code}): ${err.message}`);\n  }\n\n  getBusAtLocation = (lat, lon) => {\n    API.getAllBuses(lat, lon)\n    .then(res => {\n      let buses = res.data\n      let departOptions = []\n      buses.forEach(bus => {\n        let thisBus = {}\n        thisBus.route = bus.route.id\n        thisBus.id = bus.stop.id\n        let fullTitle = bus.values[0].direction.title.split(\"To: \")[1]\n        let direction = fullTitle.split(\" - \")[0].charAt(0)\n        let title = bus.route.title.split(\"-\")[1]\n        let stop = bus.stop.title.split(\" \").slice(1).join(\" \")\n        thisBus.title = bus.route.id + direction + \" - \" + title + \" / \" + stop\n        thisBus.direction = direction\n        departOptions.push(thisBus)\n      });\n      this.setState({departOptions})\n    })\n  }\n\n  handleDepartInput = async (e) => {\n    e.preventDefault()\n    let index = e.target.selectedIndex\n    let selectedBus = e.target.childNodes[index]\n    let depart = {\n      route: selectedBus.getAttribute('data-route'),\n      stopId: e.target.value,\n      direction: selectedBus.getAttribute('data-direction')\n    }\n    await this.setState({depart})\n    this.listDestinations()\n\n  }\n\n  listDestinations = () => {\n    let {route, direction, stopId} = this.state.depart\n    API.getNextStops(route, direction, stopId)\n      .then(res => {\n      this.setState({arrivalOptions: res.data})\n      })\n  }\n\n  handleDestinationInput = (e) => {\n    e.preventDefault()\n    let index = e.target.selectedIndex\n    // let selectedBus = e.target.childNodes[index]\n    let terminal = false    \n    if (index === e.target.childNodes.length - 1){\n      terminal = true\n    }\n    let previousStop = e.target.childNodes[index - 1].getAttribute(\"value\")\n    if (index === 1){\n      previousStop = this.state.depart.stopId    \n    }\n    let arrival = {\n      stopId: e.target.value,\n      terminal: terminal,\n      previous: previousStop\n    }\n\n    this.setState({arrival})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    let route = parseInt(this.state.depart.route)\n    let origin = this.state.depart.stopId\n    let destination = this.state.arrival.stopId\n    let terminal = this.state.arrival.terminal\n    let previous = this.state.arrival.previous\n\n    API.search(route, origin, destination, terminal, previous)\n      .then(res => {\n        this.setState({ \n          receivedResult: true,\n          travelMode: res.data.travelMode,\n          nextBus: res.data.bus.nextBus,\n          walkTime: res.data.walk\n         })\n        console.log(res.data)\n      })\n      .catch(error => {\n        this.setState({error})\n      })\n  }\n\n  handleClickForDisplay = (e) => {\n    e.preventDefault()\n    this.setState({receivedResult: false})\n  }\n\n  render() {\n    if (this.state.error) {\n      return(\n        <MDBContainer className=\"text-center mt-5 pt-5 mainContainer\">\n            <MDBRow className=\"justify-content-center\">\n                <MDBCol md=\"5\" sm=\"12\">\n                  <MDBBtn href=\"/\" color=\"yellow accent-3\" className=\"black-text\">TTC is unable provide bus info at this time.<br />Click here to try again.</MDBBtn>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n      );\n    } else {\n      return(\n        <MDBContainer className=\"text-center mt-5 pt-5 mainContainer\">\n\n          {this.state.receivedResult ?\n          (<WalkButtonWaitButton\n          className='test'\n            result={this.state.receivedResult}\n            travelMode={this.state.travelMode}\n            onClick={this.handleClickForDisplay}\n            nextBus={this.state.nextBus}\n            walkTime={this.state.walkTime}\n          />) : \n          (<form style={{maxWidth: \"400px\"}} className=\"mx-auto\">\n            <MDBRow className=\"row justify-content-center\">\n                <p className=\"white-text mb-3\">Please press the \"target icon\" to find your current location. Then select your bus form the \"Start...\" dropdown menu.</p>\n                <MDBCol sm=\"12\" className=\"mb-4\">\n                    <Start departOptions={this.state.departOptions} geolocate={this.geolocate} latitude={this.state.latitude} longitude={this.state.longitude} handleChange={this.handleDepartInput}/>\n                </MDBCol>\n                <MDBCol sm=\"12\" className=\"mb-4\">\n                    <End arrivalOptions={this.state.arrivalOptions} route={this.state.depart.route} handleChange={this.handleDestinationInput}/> \n                </MDBCol>\n                <MDBCol className=\"p-0 mx-auto\">\n                  <MDBBtn color=\"yellow accent-3\" className=\"black-text\" size=\"lg\" onClick={(e) => this.handleSubmit(e)}>Submit</MDBBtn>\n                </MDBCol>\n            </MDBRow>\n          </form>)\n        }\n        </MDBContainer>\n      );\n    }\n  };\n};\n\nexport default Main","import axios from \"axios\";\n\nexport default {\n  // Gets all bus near geolocation\n  addAllRoutes: () => {\n    return axios.get(`/admin/busDb/routes`);\n  },\n\n};","import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput} from 'mdbreact';\nimport API from '../../utils/AdminAPI'\nimport '../pageStyle.css'\nimport axios from 'axios';\nimport Alert from '../../components/Alert'\n\nclass Admin extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        isLoading: false,\n        error: true,\n        email: '',\n        password: '',\n        loggedIn: true,\n        showError: true,\n        showNullError: true,\n        registerError: true,\n        messageFromServer: '',\n      };\n    }\n\n    populateRoute = (e) => {\n      e.preventDefault()\n      API.addAllRoutes()\n        .then(res => {\n          console.log(\"All routes Added.\")\n        })\n    }\n\n\n    // not true authentication\n    // componentDidMount() {\n    //   let accessString = localStorage.getItem('JWT')\n    //   console.log(accessString)\n    //   if (accessString === 'undefined') {\n    //     this.setState({\n    //       isLoading: false,\n    //       error: true\n    //     })\n    //   } else {\n    //     let payload = accessString.split(\".\")[1]\n\n    //     console.log(payload)\n\n    //     let decodedPayload = JSON.parse(base64.decode(payload))\n\n    //     console.log(decodedPayload.email)\n    //     console.log(this.props.match.params.email)\n\n    //     if (decodedPayload.email === this.props.match.params.email) {\n    //       console.log(\"decodedPayload.email === this.props.match.params.email\")\n    //       this.setState({\n    //         error: false\n    //       })\n    //     }\n\n    //   }\n    // }\n\n\n    componentDidMount() {\n      let accessString = localStorage.getItem('JWT')\n      console.log(accessString)\n      if (accessString === 'undefined') {\n        this.setState({\n          isLoading: false,\n          error: true\n        })\n      } else {\n\n        axios.get(\"/api/auth/user\", {\n            headers: {\n              Authorization: `JWT ${accessString}`\n            }\n          })\n          .then((response) => {\n            console.log(response.data)\n\n            if (response.data.auth) {\n              console.log(`auth is ${response.data.auth}`)\n              console.log(this)\n              this.setState({\n                isLoading: false,\n                error: false\n              })\n            }\n\n          })\n          .catch(error => console.error(error))\n      }\n    }\n\n\n    handleChange = name => (event) => {\n      this.setState({\n        [name]: event.target.value,\n      });\n    };\n  \n    registerUser = async (e) => {\n      e.preventDefault();\n      const {\n        password,\n        email\n      } = this.state;\n      if (password === '' || email === '') {\n        this.setState({\n          showError: true,\n          loginError: false,\n          registerError: true,\n        });\n      } else {\n        try {\n          const response = await axios.post(\n            '/api/auth/signup', {\n              email,\n              password,\n            },\n          );\n          console.log(response.data)\n          alert(response.data.message)\n          this.setState({\n            messageFromServer: response.data.message,\n            showError: false,\n            loginError: false,\n            registerError: false,\n          });\n        } catch (error) {\n          console.log(error);\n          if (error.response.data === 'username or email already taken') {\n            alert(error.response.data)\n            this.setState({\n              showError: true,\n              loginError: true,\n              registerError: false,\n            });\n          }\n        }\n      }\n    };\n  \n    logout = () => {\n      localStorage.removeItem('JWT');\n      this.setState({\n        error: true\n      })\n    }\n\n\n  render() {\n    let admin = \n    <div>\n        < MDBBtn color = \"yellow accent-3\" className=\"black-text\" onClick = {(e) => this.populateRoute(e) } > Add TTC Routes and Stops </MDBBtn>\n        <hr style={{borderTop: \"3px solid #ffffff\"}} className=\"my-4\"></hr>\n        <MDBRow>\n        <MDBCol md=\"12\" className=\"mx-auto text-left\">\n          <form>\n            <p className=\"h5 text-center white-text\">Register New Admin</p>\n            <div className=\"white-text\">\n              <MDBInput\n                className=\"white-text\"\n                label=\"Your Email\"\n                icon=\"envelope\"\n                group\n                type=\"email\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                value={this.state.email}\n                onChange={this.handleChange('email')}\n                id=\"emal\"\n              />\n              <MDBInput\n                className=\"white-text\"                \n                label=\"Your password\"\n                icon=\"lock\"\n                group\n                type=\"password\"\n                validate\n                id=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange('password')}\n              />\n            </div>\n            <div className=\"text-center\">\n              <MDBBtn color=\"yellow accent-3\" className=\"black-text\" onClick={(e) => this.registerUser(e)}>Register</MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n      <hr style={{borderTop: \"3px solid #ffffff\"}} className=\"my-4\"></hr>\n      <MDBBtn color=\"yellow accent-3\" className=\"black-text\" onClick={(e) => this.logout(e)}>Log Out</MDBBtn>\n    </div>\n\n    return ( \n      <MDBContainer className = \"text-center mt-5 pt-5 mainContainer\" >\n        <MDBRow className = \"justify-content-center\" >\n          <MDBCol md = \"5\" sm = \"12\" > \n          {!this.state.error && admin}\n          {this.state.error && < MDBBtn color = \"yellow accent-3\" className=\"black-text\" href = \"/signin\" > Please login with the correct credentials.<br></br>Click here to return to the Sign In page.</ MDBBtn>}\n          </MDBCol> \n        </MDBRow> \n      </MDBContainer>\n    );\n  };\n};\n\nexport default Admin","import React from \"react\";\nimport { MDBContainer } from 'mdbreact';\n\nconst AboutPage = () => {\n    return (\n      <MDBContainer id=\"about\" className=\"mt-5 pt-5 mainContainer\">\n        <br></br>\n        <h2>\n            Why walk or wait?\n        </h2>\n            <p>\n                We've all been there. Standing at a TTC stop, waiting, checking the time, waiting, checking the time, waiting ....\n                checking the time. Then, the scramble. How far is it to my destiantion? When does the TTC say my chariot will \n                arrive? Will it actually arrive at the next scheduled time? Or, will it be shorturned? And, even if it doess arrive,\n                will it be full?\n            </p>\n            <p>\n                SHOULD I JUST START WALKING!?\n            </p>\n            <p>\n                This app takes the guesswork out of the equation. Real-time TTC data only tells when your bus or streetcar is SUPPOSED \n                to arrive. Our app uses a proprietary algorithm to predict the future, figuring the statistical probability your ride will arrive \n                as scheduled, you'll actually be able to get on it and it will take you all the way to your destanation FASTER &#40;or slower&#41;\n                than you could make it on foot. No more street-corner math. No more should I stay or should I go. Kick back and let us make the tough decisions for you &#40;after all, you decided what to wear this morning. Haven't you done enough?&#41;\n            </p>\n            <p>\"Pure mathematics is, in its way, the poetry of logical ideas.\"\n                — Albert Einstein</p>\n            <br></br>\n            <h2>About us</h2>\n            <p>\n            A group of four soon to graduate full stack developers from the University of Toronto. Walk or Wait is our final project and\n            an app we have all become quite passionate about.\n            </p>\n            <br></br>\n            <h2>Sharon Chien</h2> \n            <p>Financial consultant with a Master of Biotech turned web developer. Currently playing super mom by day and coder at night while on mat-leave. \n            Powered by truck-loads of delicious food (carbo-loading for late night coding sessions) and a splash of caffeine. Always looking for a good coding challenge and to work with fun loving individuals on cool projects.\n            </p>\n            <br></br>\n            <h2>Paul Xu</h2>\n            <p>Working as a Junior Softwarement Engineer/IT Consultant after graduting from University of Waterloo with a Bechlor of Mathematics/Computing Option in December 2018 and recently from the University of Toronto.\n            Paul is passionate about coding when joined with data science. He is proud that Walk or Wait was able to inigrate both of his passions of web development and data modeling analysis. He is excited about his next journey \n            of working towards a Master of Analytics in Georgia Tech starting at 2019.</p>\n            <br></br>\n            <h2>Quang Chieu Nguyen</h2>\n            <p>Currently working with the non-profit VWAT Family Services. Quang while passionate about helping others is seeking out new challeges in web developoment\n            after gradution. Quang a father of two, three if you count his dog Flower believes mindfulness in the workplace is key to success,\n            so he lives out through his interests in gardening, painting, and photography.</p>\n            <br></br>\n            <h2>Holland Gronau</h2>\n            <p>I believe in using apps and good old-fashioned math to makes people's lives easier and support good causes. \n            From start to finish, Walk or Wait was developed with the philosphy that good technology should be used to solve \n            real-life problems. </p>\n            <br></br>\n            <br></br>\n      </MDBContainer>\n    );\n  }\n  \n  export default AboutPage;\n  ","import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, } from 'mdbreact';\nimport '../pageStyle.css';\n\nclass Err extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    };\n  }\n\n  render() {\n    return(\n      <MDBContainer className=\"text-center mt-5 pt-5 mainContainer\">\n          <MDBRow className=\"justify-content-center\">\n              <MDBCol md=\"5\" sm=\"12\">\n                <MDBBtn color=\"yellow accent-3\" className=\"black-text\" href=\"/\">Opps! Page not found.<br />Click to return to main menu.</MDBBtn>\n              </MDBCol>\n          </MDBRow>\n      </MDBContainer>\n    );\n  };\n};\n\nexport default Err","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport axios from 'axios';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false,\n      showError: false,\n      showNullError: false,\n    };\n  }\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  loginUser = async (e) => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    if (email === '' || password === '') {\n      this.setState({\n        showError: false,\n        showNullError: true,\n        loggedIn: false,\n      });\n    } else {\n      try {\n        const response = await axios.post('/api/auth/signin', {\n          email,\n          password,\n        });\n        console.log(response.data)\n        localStorage.setItem('JWT', response.data.token);\n        this.setState({\n          loggedIn: true,\n          showError: false,\n          showNullError: false,\n        });\n      } catch (error) {\n        console.error(error.response.data);\n        if (\n          error.response.data === 'bad username' ||\n          error.response.data === 'passwords do not match'\n        ) {\n          this.setState({\n            showError: true,\n            showNullError: false,\n          });\n        }\n      }\n    }\n  };\n\n\n  render(){\n    if(!this.state.loggedIn) {\n      return (\n        <MDBContainer className=\"mt-5 pt-5 mainContainer white-text\">\n          <MDBRow>\n            <MDBCol md=\"6\" className=\"mx-auto\">\n              <form>\n                <p className=\"h5 text-center mb-4 white-text\">Sign In</p>\n                <div className=\"white-text\">\n                  <MDBInput\n                    className=\"white-text\"\n                    label=\"Type your email\"\n                    icon=\"envelope\"\n                    group\n                    type=\"email\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    id=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange(\"email\")}\n                  />\n                  <MDBInput\n                    className=\"white-text\"\n                    label=\"Type your password\"\n                    icon=\"lock\"\n                    group\n                    type=\"password\"\n                    validate\n                    id=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange(\"password\")}\n                  />\n                </div>\n                {this.state.showNullError && (\n                  <div>\n                    <p className=\"white-text text-center\">The username or password cannot be empty.</p>\n                  </div>\n                )}\n                {this.state.showError && (\n                  <div>\n                    <p className=\"white-text text-center\">\n                    That username or password isn&apos;t recognized. Please try again or register now. \n                    </p>\n                    <MDBBtn href=\"/signup\" size=\"sm\" color=\"yellow accent-3\" className=\"black-text\">Register</MDBBtn>\n                  </div>\n\n                )}\n                <div className=\"text-center\">\n                  <MDBBtn color=\"yellow accent-3\" className=\"black-text\" onClick={(e)=>{this.loginUser(e)}}>Login</MDBBtn>\n                </div>\n              </form>\n              {/* <br></br>\n              <p className=\"text-center\">Don't have an account? <a style={{color: \"#ffea00\"}} href=\"/signup\">Sign up here.</a></p> */}\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      );\n    }\n    return <Redirect to={`/admin`} />\n  }\n};\n\nexport default Signin;","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport axios from 'axios'\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      messageFromServer: '',\n      showError: false,\n      registerError: false,\n      loginError: false,\n    };\n  }\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  registerUser = async (e) => {\n    e.preventDefault();\n    const {\n      password,\n      email\n    } = this.state;\n    if (password === '' || email === '') {\n      this.setState({\n        showError: true,\n        loginError: false,\n        registerError: true,\n      });\n    } else {\n      try {\n        const response = await axios.post(\n          '/api/auth/signup', {\n            email,\n            password,\n          },\n        );\n        this.setState({\n          messageFromServer: response.data.message,\n          showError: false,\n          loginError: false,\n          registerError: false,\n        });\n      } catch (error) {\n        console.error(error.response.data);\n        if (error.response.data === 'username or email already taken') {\n          this.setState({\n            showError: true,\n            loginError: true,\n            registerError: false,\n          });\n        }\n      }\n    }\n  };\n\n  render () {\n    return (\n      <MDBContainer className=\"mt-5 pt-5 mainContainer white-text\">\n        <MDBRow>\n          <MDBCol md=\"6\" className=\"mx-auto\">\n            <form>\n              <p className=\"h5 text-center mb-4 white-text\">Sign Up</p>\n              <div className=\"white-text\">\n                <MDBInput\n                  className=\"white-text\"\n                  label=\"Your Email\"\n                  icon=\"envelope\"\n                  group\n                  type=\"email\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  value={this.state.email}\n                  onChange={this.handleChange('email')}\n                  id=\"emal\"\n                />\n                <MDBInput\n                  className=\"white-text\"                \n                  label=\"Your password\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                  validate\n                  id=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange('password')}\n                />\n              </div>\n              <div className=\"text-center\">\n                <MDBBtn color=\"yellow accent-3\" className=\"black-text\" onClick={(e) => this.registerUser(e)}>Register</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n};\n\nexport default Signup;\n\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Nav from './components/Nav'\nimport Footer from './components/Footer'\nimport Main from './pages/Main'\nimport Admin from './pages/Admin'\nimport AboutPage from './pages/About'\nimport Err from './pages/404'\nimport Signin from './pages/Signin'\nimport Signup from './pages/Signup'\n\nfunction App() {\n  return (\n    <Router>\n      <div style={{backgroundColor: \"#212121\"}}>\n        <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Main}/>\n            <Route exact path=\"/admin\" component={Admin}/> \n            <Route exact path=\"/about\" component={AboutPage}/> \n            <Route exact path=\"/signin\" component={Signin}/>\n            <Route exact path=\"/signup\" component={Signup}/>     \n            <Route component={Err} />       \n          </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}